plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'me.moallemi.advanced-build-version'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'com.spotify.ruler'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "dev.yasan.metro"
        minSdk 21
        targetSdk 31

        advancedVersioning {
            nameOptions {
                versionMajor 2
                versionMinor 1
                versionPatch 0
            }
            codeOptions {
                versionCodeType 'GIT_COMMIT_COUNT'
            }
            outputOptions {
                renameOutput true
                nameFormat 'tehro-${versionName}-${versionCode}-${buildType}-${flavorName}'
            }
        }

        def appVersionName = advancedVersioning.versionName
        def appVersionCode = advancedVersioning.versionCode

        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    def dimenStore = 'store'
    flavorDimensions dimenStore
    productFlavors {
        play {
            dimension dimenStore
        }
        bazaar {
            dimension dimenStore
            applicationIdSuffix(".bazaar")
        }
        github {
            dimension dimenStore
            applicationIdSuffix(".github")
        }
        fdroid {
            dimension dimenStore
            applicationIdSuffix(".fdroid")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}
advancedVersioning.renameOutputApk()

dependencies {
    // YASAN Development Kit
    implementation(project(':ydk:core'))
    implementation(project(':ydk:compose'))

    // Misc
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Truth
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "androidx.navigation:navigation-compose:$lifecycle_version"

    // Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-material:$accompanist_version"

    // Lifecycle
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    // Subsampling Scale ImageView
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'

    // Coil
    implementation("io.coil-kt:coil-compose:$coil_version")

    // Persian Date
    implementation 'com.github.samanzamani:PersianDate:1.3.4'

}

ruler {
    abi.set("arm64-v8a")
    locale.set("en")
    screenDensity.set(480)
    sdkVersion.set(27)
    ownershipFile.set(project.layout.projectDirectory.file("ownership.yaml"))
    defaultOwner.set("third-party")
}

tasks.named("check").configure {
    dependsOn("analyzePlayDebugBundle")
    dependsOn("analyzePlayReleaseBundle")
}